name: Publish crate

concurrency:
  group: "${{ github.workflow }}"
  cancel-in-progress: false # last one must win in case of multiple releases

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

permissions:
  contents: read

env:
  CARGO_TERM_COLOR: always

jobs:
  repo-has-crate:
    name: Repo publishes crate?
    runs-on: windows-latest
    outputs:
      has_crate: ${{ steps.determine.outputs.has_crate }}

    steps:
      - name: Repo has crate?
        id: determine
        shell: pwsh
        run: |
          has_crate="${{ vars.HAS_CRATE }}"
          echo "has_crate=${has_crate:-false}" >> ${GITHUB_OUTPUT}

  publish-crate:
    name: Publish crate
    runs-on: windows-latest
    needs:
      - repo-has-crate
    if: |
      fromJSON(needs.repo-has-crate.outputs.has_crate) == true
    steps:
      - name: Disable autocrlf
        shell: pwsh
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          show-progress: false

      - name: Cache dependencies
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        env:
          CACHE_NAME: cargo-cache-dependencies
        with:
          path: |
            ~/.cargo
            ./target
          key: ${{ runner.os }}-${{ runner.arch }}-build-${{ env.CACHE_NAME }}-${{ hashFiles('Cargo.lock') }}-test
          restore-keys: |
            ${{ runner.os }}-${{ runner.arch }}-build-${{ env.CACHE_NAME }}-${{ hashFiles('Cargo.lock') }}-
            ${{ runner.os }}-${{ runner.arch }}-build-${{ env.CACHE_NAME }}-

      - name: Set up mold
        uses: rui314/setup-mold@85c79d00377f0d32cdbae595a46de6f7c2fa6599 # v1

      - name: Set up toolchain
        shell: pwsh
        run: |
          Remove-Item -ErrorAction SilentlyContinue ${HOME}/.cargo/bin/cargo-fmt.exe
          Remove-Item -ErrorAction SilentlyContinue ${HOME}/.cargo/bin/rust-analyzer.exe
          Remove-Item -ErrorAction SilentlyContinue ${HOME}/.cargo/bin/rustfmt.exe

          rustup self update
          rustup update
          rustup show active-toolchain || rustup toolchain install
          rustup show

          cargo --version

      - name: Get binstall
        shell: pwsh
        working-directory: ${{ env.TEMP }}
        run: |
          $archive="cargo-binstall-x86_64-pc-windows-msvc.zip"
          Invoke-WebRequest "https://github.com/cargo-bins/cargo-binstall/releases/latest/download/${archive}" -OutFile "${archive}"

          Expand-Archive  "./${archive}" -DestinationPath .

          Remove-Item -ErrorAction SilentlyContinue "./${archive}"

          Move-Item -Force ./cargo-binstall.exe ~/.cargo/bin/

      - name: Install cargo-edit to do set-version
        shell: pwsh
        run: |
          cargo binstall --no-confirm cargo-edit

      - name: Set version in Cargo.toml / Cargo.lock
        shell: pwsh
        id: version
        run: |
          $version="${{ github.ref_name }}"
          # remove v
          $version = $version -replace 'v', ''

          # store
          cargo set-version $version

          # debug
          Get-Content -Path Cargo.toml

      - name: Publish
        shell: pwsh
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: |
          # we don't commit the version number in our codebase
          cargo publish --allow-dirty
