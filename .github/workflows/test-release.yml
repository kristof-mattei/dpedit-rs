# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Test Release

on:
  workflow_dispatch: # releasing is manual as we don't want to release every time

permissions:
  contents: write
  issues: read
  pull-requests: read

env:
  CARGO_TERM_COLOR: always
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test-release:
    name: Test Release
    runs-on: windows-latest
    steps:
      - name: Only on main
        if: |
          github.ref != 'refs/heads/main'
        shell: pwsh
        run: |
          echo "Only to be executed on main"
          exit 1

      - name: Disable autocrlf
        shell: pwsh
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf

      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          fetch-depth: 0
          show-progress: false

      - name: Cache dependencies
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        env:
          CACHE_NAME: cargo-cache-dependencies
        with:
          path: |
            ~/.cargo
            ./target
          key: ${{ runner.os }}-${{ runner.arch }}-build-${{ env.CACHE_NAME }}-${{ hashFiles('Cargo.lock') }}-cocogitto
          restore-keys: |
            ${{ runner.os }}-${{ runner.arch }}-build-${{ env.CACHE_NAME }}-${{ hashFiles('Cargo.lock') }}-
            ${{ runner.os }}-${{ runner.arch }}-build-${{ env.CACHE_NAME }}-

      - name: Set up toolchain
        shell: pwsh
        run: |
          Remove-Item -ErrorAction SilentlyContinue ${HOME}/.cargo/bin/cargo-fmt.exe
          Remove-Item -ErrorAction SilentlyContinue ${HOME}/.cargo/bin/rust-analyzer.exe
          Remove-Item -ErrorAction SilentlyContinue ${HOME}/.cargo/bin/rustfmt.exe

          rustup self update
          rustup update
          rustup show active-toolchain || rustup toolchain install
          rustup show

          cargo --version

      - name: Get binstall
        shell: pwsh
        working-directory: ${{ env.TEMP }}
        run: |
          $archive="cargo-binstall-x86_64-pc-windows-msvc.zip"
          Invoke-WebRequest "https://github.com/cargo-bins/cargo-binstall/releases/latest/download/${archive}" -OutFile "${archive}"

          Expand-Archive  "./${archive}" -DestinationPath .

          Remove-Item -ErrorAction SilentlyContinue "./${archive}"

          Move-Item -Force ./cargo-binstall.exe ~/.cargo/bin/

      - name: Install cocogitto to get the next version number
        shell: pwsh
        run: |
          cargo binstall --no-confirm cocogitto --pkg-url "{ repo }/releases/download/{ version }/{ name }-{ version }-{ target }.tar.gz" --bin-dir "{ target }/{ bin }{ binary-ext }" --target x86_64-unknown-linux-musl --pkg-fmt tgz --bin cog --strategies crate-meta-data

      - name: Bump
        shell: pwsh
        id: release
        run: |
          git config --global user.name github-actions
          git config --global user.email github-actions@github.com

          cog bump --auto

          $version = "v$(cog -v get-version)"
          Add-Content -Path $env:GITHUB_OUTPUT -Value "version=$version"

          cog changelog --at $version > GITHUB_CHANGELOG.md

          Write-Host "New version: $version"

          echo "Changelog: "

          cat GITHUB_CHANGELOG.md
